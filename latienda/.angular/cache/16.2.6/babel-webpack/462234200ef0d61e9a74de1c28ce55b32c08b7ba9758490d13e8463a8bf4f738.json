{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DataService {\n  constructor() {\n    this.listeArticles = [{\n      id: 1,\n      titreArticle: \"vélo\",\n      prixArticle: 80,\n      description: \"Un VTT\",\n      urlImg: \"../assets/img/velo.jpg\",\n      textAltImg: \"Un vélo Scott\",\n      dispo: false\n    }, {\n      id: 2,\n      titreArticle: \"TV\",\n      prixArticle: 230,\n      description: \"Excellente résolution\",\n      urlImg: \"../assets/img/tv.jpg\",\n      textAltImg: \"TV Sony\",\n      dispo: true\n    }, {\n      id: 3,\n      titreArticle: \"jouets\",\n      prixArticle: 15,\n      description: \"Jouets en bois\",\n      urlImg: \"../assets/img/jouets.jpg\",\n      textAltImg: \"Jouets en bois de luxe\",\n      dispo: false\n    }];\n  }\n  //fct qui récupère un objet du [] en fct de son id:\n  getArticle(id) {\n    const articles = this.listeArticles.find(a => {\n      return a.id == id;\n    });\n    return articles;\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DataService","constructor","listeArticles","id","titreArticle","prixArticle","description","urlImg","textAltImg","dispo","getArticle","articles","find","a","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/chrisrodriguezperez/Desktop/AngularTest/latienda/src/app/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  listeArticles = [\n    {\n      id: 1,\n      titreArticle: \"vélo\",\n      prixArticle: 80,\n      description: \"Un VTT\",\n      urlImg: \"../assets/img/velo.jpg\",\n      textAltImg: \"Un vélo Scott\",\n      dispo: false\n    },\n    {\n      id: 2,\n      titreArticle: \"TV\",\n      prixArticle: 230,\n      description: \"Excellente résolution\",\n      urlImg: \"../assets/img/tv.jpg\",\n      textAltImg: \"TV Sony\",\n      dispo: true\n    },\n    {\n      id: 3,\n      titreArticle: \"jouets\",\n      prixArticle: 15,\n      description: \"Jouets en bois\",\n      urlImg: \"../assets/img/jouets.jpg\",\n      textAltImg: \"Jouets en bois de luxe\",\n      dispo: false\n    }\n  ]\n\n  constructor() { }\n\n  //fct qui récupère un objet du [] en fct de son id:\n  getArticle(id: number) {\n    const articles = this.listeArticles.find((a) => {\n      return a.id == id;\n    });\n    return articles;\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EAgCtBC,YAAA;IA9BA,KAAAC,aAAa,GAAG,CACd;MACEC,EAAE,EAAE,CAAC;MACLC,YAAY,EAAE,MAAM;MACpBC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,QAAQ;MACrBC,MAAM,EAAE,wBAAwB;MAChCC,UAAU,EAAE,eAAe;MAC3BC,KAAK,EAAE;KACR,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,YAAY,EAAE,IAAI;MAClBC,WAAW,EAAE,GAAG;MAChBC,WAAW,EAAE,uBAAuB;MACpCC,MAAM,EAAE,sBAAsB;MAC9BC,UAAU,EAAE,SAAS;MACrBC,KAAK,EAAE;KACR,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,YAAY,EAAE,QAAQ;MACtBC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,gBAAgB;MAC7BC,MAAM,EAAE,0BAA0B;MAClCC,UAAU,EAAE,wBAAwB;MACpCC,KAAK,EAAE;KACR,CACF;EAEe;EAEhB;EACAC,UAAUA,CAACP,EAAU;IACnB,MAAMQ,QAAQ,GAAG,IAAI,CAACT,aAAa,CAACU,IAAI,CAAEC,CAAC,IAAI;MAC7C,OAAOA,CAAC,CAACV,EAAE,IAAIA,EAAE;IACnB,CAAC,CAAC;IACF,OAAOQ,QAAQ;EACjB;EAAC,QAAAG,CAAA,G;qBAxCUd,WAAW;EAAA;EAAA,QAAAe,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}